用函数封装凯撒加密算法。凯撒加密要求参见第四课作业。

密码学中，凯撒密码（Caesar Cipher）是一种最简单的加密技术，其核心思想是替换加密。即将输入的字母根据字母表上的顺序，向前或向后偏移固定的数目，形成密文。如：向后偏移2位，则 A 变成 C（相当于 'A'+2）。
在应用中，可以将字母表中的 A-Z a-z 0-9 扩展为大循环，形成 A B ~ Z a b ~ z 0 1 ~ 9 A B ~ Z...为基础的链，用以进行映射。如：输入Z，向后偏移2位，则Z变成b。输入9，向后偏移2位，则9变成B。

本题要求：将以下代码补充完整，用于将输入的字符转换为凯撒加密的密文。

函数定义：
int CaesarCipher ( char* IN, const int D )
{
   
        ....
    return 1;    
}
其中
变量 IN 是输入的字符（取值为：A~Z，a~z，0~9，还包括标点符号和空格）（注意：标点符号和空格不转换）
变量 D 是偏移（取值为 -10=<D<=10)

返回值：
1：合法字符，并完成字符转换，且转换后的字符由函数参数 IN 返回
0：遇到 '\n'，停止字符转换，且IN 返回 0